worker_processes 1;
events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    server {
        # listen 443 ssl;
        # server_name your_domain.com;

        # SSL configuration
        # ssl_certificate     /etc/ssl/certs/your_certificate.crt;
        # ssl_certificate_key /etc/ssl/private/your_certificate_key.key;

        # Nginx will proxy requests to oauth2-proxy for authentication
        location /oauth2/ {
            proxy_pass       http://oauth2-proxy:4180;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Auth-Request-User $http_x_auth_request_user;
            proxy_set_header X-Auth-Request-Email $http_x_auth_request_email;
            proxy_set_header X-Auth-Request-Preferred-Username $http_x_auth_request_preferred_username;
            proxy_set_header X-Auth-Request-Groups $http_x_auth_request_groups;
        }

        # All requests to your application will go through oauth2-proxy
        location / {
            # Enforce OAuth authentication before proxying the request
            auth_request /oauth2/auth;
            error_page 401 = @oauth2_sign_in;

            auth_request_set $user $upstream_http_x_auth_request_user;
            auth_request_set $email $upstream_http_x_auth_request_email;

            proxy_set_header X-User $user;
            proxy_set_header X-Email $email;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Auth-Request-User $http_x_auth_request_user;
            proxy_set_header X-Auth-Request-Email $http_x_auth_request_email;
            proxy_set_header X-Auth-Request-Preferred-Username $http_x_auth_request_preferred_username;
            proxy_set_header X-Auth-Request-Groups $http_x_auth_request_groups;
            # Proxy pass to Flask
            proxy_pass http://webhosting:8000;
        }

        location @oauth2_sign_in {
            return 302 /oauth2/start?rd=$scheme://$host$request_uri;
        }
    }
}
