services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./ssl:/etc/ssl:ro  # Mount your SSL certificates here
    depends_on:
      - oauth2-proxy
      - webhosting
    networks:
      - frontend
      - backend

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
    environment:
      - OAUTH2_PROXY_PROVIDER=github
      - OAUTH2_PROXY_CLIENT_ID=${GITHUB_CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET}
      - OAUTH2_PROXY_REDIRECT_URL=http://localhost/oauth2/callback
      - OAUTH2_PROXY_UPSTREAMS=http://webhosting:8000
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_SCOPE=repo,read:user,user:email
      - OAUTH2_PROXY_COOKIE_SECURE=false
      - OAUTH2_PROXY_COOKIE_EXPIRE=24h
      - OAUTH2_PROXY_COOKIE_REFRESH=1h
      - OAUTH2_PROXY_LOG_LEVEL=debug  # Verbose logging level
      - OAUTH2_PROXY_WHITELIST_DOMAINS=.localhost
    ports:
      - "4180:4180"
    command:
      - --http-address=0.0.0.0:4180
      - --set-xauthrequest
      - --set-authorization-header
      - --pass-access-token
      - --pass-basic-auth
    networks:
      - frontend
      - backend

  webhosting:
    build: ./webhosting
    ports:
      - "8000:8000"
    networks:
      - backend
    volumes:
      - ./web-root:/web-root

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
